name: TestRail Integration

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때마다 실행
      - testrail_6
  pull_request:
    branches:
      - main  # main 브랜치에 PR이 생길 때마다 실행
      - testrail_6

jobs:
  testrail-integration:
    runs-on: ubuntu-latest  # GitHub Actions에서 사용할 환경 (Ubuntu)

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # 현재 저장소의 코드를 가져옴

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'  # Node.js 최신 LTS 버전 사용

    - name: Install dependencies
      run: npm install  # 의존성 설치

    - name: Run TestRail Integration Script
      run: node index.js
      env:
        TESTRAIL_API_KEY: ${{ secrets.TESTRAIL_API_KEY }}
        TESTRAIL_USER: ${{ secrets.TESTRAIL_USER }}
        TESTRAIL_URL: ${{ secrets.TESTRAIL_URL }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


    - name: Print environment variables
      run: |
        echo "TESTRAIL_API_KEY: $TESTRAIL_API_KEY"
        echo "TESTRAIL_USER: $TESTRAIL_USER"
        echo "TESTRAIL_URL: $TESTRAIL_URL"
        echo "SLACK_WEBHOOK_URL: $SLACK_WEBHOOK_URL"
      env:
        TESTRAIL_API_KEY: ${{ secrets.TESTRAIL_API_KEY }}
        TESTRAIL_USER: ${{ secrets.TESTRAIL_USER }}
        TESTRAIL_URL: ${{ secrets.TESTRAIL_URL }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


    - name: Send Slack Notification
      run: |
        if [ -f slack_message.txt ]; then
          MESSAGE=$(cat slack_message.txt)
        else
          MESSAGE="TestRail Integration encountered an error!"
        fi
        curl -X POST -H "Content-type: application/json" \
        --data "{\"text\":\"$MESSAGE\"}" $SLACK_WEBHOOK_URL
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  

